Java 3rd June 2003 to 24th June 

Event Handling
=-=-=-=-=-=-=-=-=-=-=-=-=-
1)	Action Listener
2)	Mouse Listener
3)	Key Listener
4)	Focus Listener
5)	Item Listener
x-x-x-x-x-x-x-x-x-x-x-x-x-


Example a Simple Frame Without ActionListner

Example 1
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-
import java.awt.*;
import javax.swing.*;
class A extends JFrame
{
	JButton b;
	JTextField t;
	Container co;
	public A()
	{
		co=getContentPane();
		b=new JButton("Button");
		t=new JTextField(20);
		co.setLayout(null);
		co.add(b);b.setBounds(20,20,80,20);
		co.add(t);t.setBounds(20,50,80,20);
		setSize(200,200);setVisible(true);
		setDefaultCloseOperation(EXIT_ON_CLOSE);
	}
	public static void main (String x[])
	{
		A a = new A();
	}
}
x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x


Example 2 Action Events for Button and TextField (ActionListener)
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-
import java.awt.*;
import javax.swing.*;	 
import java.awt.event.*; //For Action Listening
class A extends JFrame implements ActionListener
{
	JButton b;
	JTextField t;
	Container co;
	public A()
	{
		co=getContentPane();
		b=new JButton("Button");
		t=new JTextField(20);
		co.setLayout(null);
		co.add(b);b.setBounds(20,20,80,20);b.addActionListener(this);//"this" means this class is ActionListener himself. This class is acting like Action Listener Means this class
		co.add(t);t.setBounds(20,50,80,20);t.addActionListener(this);
		setSize(200,200);setVisible(true);
		setDefaultCloseOperation(EXIT_ON_CLOSE);
	}
	public void actionPerformed(ActionEvent Matrix)
	{
		if (Matrix.getSource()==b) //e.getSource Returns the Object on which the Event has been Performed
		{
			JOptionPane.showMessageDialog(null,"Dont Click Me");
			System.out.println("Dont Press........");
		}
		if (Matrix.getSource()==t)
		{
			JOptionPane.showMessageDialog(null,"Dont Write Anything");
			System.out.println("Dont Write.........");
		}
	}
	public static void main (String x[])
	{
		A a = new A();
	}
}
x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x


Mouse Listener 7th June 2003

Example3 Mouse Listener
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-
import java.awt.*;
import javax.swing.*;
import java.awt.event.*;


class MouseX extends JFrame implements MouseListener
{
	Container co;

	public MouseX()
	{
		co=getContentPane();
		co.addMouseListener(this);

		co.setLayout(null);
		setSize(200,200);setVisible(true);
		setDefaultCloseOperation(EXIT_ON_CLOSE);
	}

	public static void main (String x[])
	{
		MouseX a = new MouseX();
	}

		//Mouse Events *************************************
		public void mouseEntered(MouseEvent e)
		{
			System.out.println("Mouse Entered.....");
		}//
		public void mouseClicked(MouseEvent e)
		{
			System.out.println("Mouse Clicked...");

		}//
		public void mouseExited(MouseEvent e)
		{
			System.out.println("Mouse Exited.....");
		}//
		public void mousePressed(MouseEvent e)
		{
			System.out.println("Mouse Pressed.....");
		}//
		public void mouseReleased(MouseEvent e)
		{
				System.out.println("Mouse Released.....");
		}//
		//Mouse Events *************************************

}
x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x


Example 4 (Example 2+3) Mouse Listener with TextField and Button but no ActionListener
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-
import java.awt.*;
import javax.swing.*;
import java.awt.event.*;


class Mouse extends JFrame implements MouseListener
{
	JButton b;
	JTextField t;
	Container co;

	public Mouse()
	{
		co=getContentPane();
		co.addMouseListener(this);
		b=new JButton("Button");
		t=new JTextField(20);
		b.addMouseListener(this);
		t.addMouseListener(this);

		co.setLayout(null);
		co.add(b);b.setBounds(20,20,80,20);
		co.add(t);t.setBounds(20,50,80,20);
		setSize(200,200);setVisible(true);
		setDefaultCloseOperation(EXIT_ON_CLOSE);
	}
	public static void main (String x[])
	{
		Mouse a = new Mouse();
	}

		//Mouse Events *************************************
		public void mouseEntered(MouseEvent e)
		{
			System.out.println("Mouse Entered.....");

			if(e.getSource()==co)
			System.out.println("Mouse Entered..on container...");
			if(e.getSource()==b)
			System.out.println("Mouse Entered..on button...");
			if(e.getSource()==t)
			System.out.println("Mouse Entered..on textfiled...");

		}//
		public void mouseClicked(MouseEvent e)
		{
			System.out.println("Mouse Clicked.....");

			if(e.getSource()==co)
			System.out.println("Mouse Clicked..on container...");
			if(e.getSource()==b)
			System.out.println("Mouse Clicked..on button...");
			if(e.getSource()==t)
			System.out.println("Mouse Clicked..on textfiled...");
		}//
		public void mouseExited(MouseEvent e)
		{
			System.out.println("Mouse Exited.....");

			if(e.getSource()==co)
			System.out.println("Mouse Exited..from container...");
			if(e.getSource()==b)
			System.out.println("Mouse Exited..from button...");
			if(e.getSource()==t)
			System.out.println("Mouse Exited..from textfiled...");
		}//
		public void mousePressed(MouseEvent e)
		{
			System.out.println("Mouse Pressed.....");

			if(e.getSource()==co)
			System.out.println("Mouse Pressed on container...");
			if(e.getSource()==b)
			System.out.println("Mouse Pressed on button...");
			if(e.getSource()==t)
			System.out.println("Mouse Pressed on textfiled...");

		}//
		public void mouseReleased(MouseEvent e)
		{
			System.out.println("Mouse Released.....");

			if(e.getSource()==co)
			System.out.println("Mouse Released from container...");
			if(e.getSource()==b)
			System.out.println("Mouse Released from button...");
			if(e.getSource()==t)
			System.out.println("Mouse Released from textfiled...");

		}//
		//Mouse Events *************************************
}
x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-
   *************************************************************************
     Example 5 (Example 2+3) Mouse Listener + Action Listener Master Piece
   *************************************************************************
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-

import java.awt.*;
import javax.swing.*;
import java.awt.event.*; //For Action Listening
class Mix extends JFrame implements ActionListener, MouseListener
{
	JButton b;
	JTextField t;
	Container co;

	public Mix()
	{
		co=getContentPane();
		b=new JButton("Button");
		t=new JTextField(20);
		co.setLayout(null);

		co.add(b);b.setBounds(20,20,80,20);
		co.add(t);t.setBounds(20,50,80,20);

		//"this" means this class is ActionListener himself. This class is acting like Action Listener Means this class
		//Action Listener
		b.addActionListener(this);
		t.addActionListener(this);

		//Mouse Listener
		co.addMouseListener(this);
		b.addMouseListener(this);
		t.addMouseListener(this);

		setSize(200,200);setVisible(true);
		setDefaultCloseOperation(EXIT_ON_CLOSE);
	}

	public void actionPerformed(ActionEvent Matrix)
	{
		if (Matrix.getSource()==b) //e.getSource Returns the Object on which the Event has been Performed
		{
			JOptionPane.showMessageDialog(null,"Dont Click Me");
			System.out.println("Dont Press........");
		}
		if (Matrix.getSource()==t)
		{
			JOptionPane.showMessageDialog(null,"Dont Write Anything");
			System.out.println("Dont Write.........");
		}
	}

	//Mouse Events *************************************
			public void mouseEntered(MouseEvent e)
			{
				System.out.println("Mouse Entered.....");

				if(e.getSource()==co)
				System.out.println("Mouse Entered..on container...");
				if(e.getSource()==b)
				System.out.println("Mouse Entered..on button...");
				if(e.getSource()==t)
				System.out.println("Mouse Entered..on textfiled...");

			}//
			public void mouseClicked(MouseEvent e)
			{
				System.out.println("Mouse Clicked.....");

				if(e.getSource()==co)
				System.out.println("Mouse Clicked..on container...");
				if(e.getSource()==b)
				System.out.println("Mouse Clicked..on button...");
				if(e.getSource()==t)
				System.out.println("Mouse Clicked..on textfiled...");
			}//
			public void mouseExited(MouseEvent e)
			{
				System.out.println("Mouse Exited.....");

				if(e.getSource()==co)
				System.out.println("Mouse Exited..from container...");
				if(e.getSource()==b)
				System.out.println("Mouse Exited..from button...");
				if(e.getSource()==t)
				System.out.println("Mouse Exited..from textfiled...");
			}//
			public void mousePressed(MouseEvent e)
			{
				System.out.println("Mouse Pressed.....");

				if(e.getSource()==co)
				System.out.println("Mouse Pressed on container...");
				if(e.getSource()==b)
				System.out.println("Mouse Pressed on button...");
				if(e.getSource()==t)
				System.out.println("Mouse Pressed on textfiled...");

			}//
			public void mouseReleased(MouseEvent e)
			{
				System.out.println("Mouse Released.....");

				if(e.getSource()==co)
				System.out.println("Mouse Released from container...");
				if(e.getSource()==b)
				System.out.println("Mouse Released from button...");
				if(e.getSource()==t)
				System.out.println("Mouse Released from textfiled...");

			}//
	//Mouse Events *************************************


	public static void main (String x[])
	{
		System.out.println("Loading Frame........");
		Mix a = new Mix();
	}
}
x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-
*************************************************************************
Example 6 ( ) Key Listener + Action Listener Master Piece Java Task1 Assg
*************************************************************************
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.applet.*;

public class Task1 extends Applet implements KeyListener , ActionListener
{
	JTextField t=new JTextField(15);
	JTextField t1=new JTextField(15);
	JTextField t2=new JTextField(15);
	JTextField t3=new JTextField(15);
	JLabel l=new JLabel("Value A   ");
	JLabel l1=new JLabel("Value B   ");
	JLabel l2=new JLabel("Value C   ");
	JLabel l3=new JLabel("Total :   ");
	JButton btn=new JButton("Reset");
	JButton btn1=new JButton("Exit");
	Container c;
	public void init()
	{
		//c=getContentPane();
		setLayout(new FlowLayout());
		add(l);
		add(t);
		add(l1);
		add(t1);
		add(l2);
		add(t2);
		add(l3);
		add(t3);
		add(btn);add(btn1);

		//Adding KeyListener for Checking and Processing
		t.addKeyListener(this);
		t1.addKeyListener(this);
		t2.addKeyListener(this);
		btn.addActionListener(this);
		btn1.addActionListener(this);
		//t3.addKeyListener(this);
		setSize(200,300);
		setVisible(true);
	}
	public static void main(String a[])
	{
		Task1 k1=new Task1();
	}

	boolean b;
	float txt,txt1,txt2,total;

	public void keyPressed(KeyEvent k1)
	{
		if(k1.getSource()==t || k1.getSource()==t1 ||k1.getSource()==t2 || k1.getSource()==t3)
		{
			if((k1.getKeyCode()>=48 && k1.getKeyCode()<=57 )|| k1.getKeyCode()==8 || k1.getKeyCode()==46)//0-9 then back spc then .
			b=true;
			else b=false;
		}
	}
	public void keyTyped(KeyEvent k2)
	{
		if(!b)
		k2.consume();
	}
	public void keyReleased(KeyEvent k3)
	{
		if ((t.getText()).equals(""))
			txt=0;
		else
			//txt=Integer.parseInt(t.getText());
			txt =Float.parseFloat(t.getText());

		if ((t1.getText()).equals(""))
			txt1=0;
		else
			//txt1=Integer.parseInt(t1.getText());
			txt1 =Float.parseFloat(t1.getText());

		if ((t2.getText()).equals(""))
			txt2=0;
		else
			//txt2=Integer.parseInt(t2.getText());
			txt2 =Float.parseFloat(t2.getText());

		total = (txt + txt1 + txt2);
		t3.setText(String.valueOf(total));
	}
	public void actionPerformed(ActionEvent e)
	{
		if(e.getSource()==btn)
		{
			t.setText("");
			t1.setText("");
			t2.setText("");
			t3.setText("");
			t.requestFocus();
		}
		if(e.getSource()==btn1)
		{
			JOptionPane.showMessageDialog(null,"Thank you for use....!!!");
			System.exit(0);
		}
	}

}//class
x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-
*************************************************************************
Focus Listener
*************************************************************************
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-

import java.awt.event.*;
import java.awt.*;
import javax.swing.*;
class To extends JFrame implements FocusListener
{
	JTextField btn=new JTextField(20);
	JButton btn1=new JButton("Exit");
	Container c;
	public To()
	{
		c=getContentPane();
		c.setLayout(new FlowLayout());
		c.add(btn);
		c.add(btn1);
		btn.addFocusListener(this);
		btn1.addFocusListener(this);
						setSize(200,300);
				setVisible(true);
btn1.requestFocus();
	}
	public void focusGained(FocusEvent e)
	{
		if(e.getSource()==btn)
		{
			System.out.println("focus gained by Reset");
		}
		if(e.getSource()==btn1)
		{
			System.out.println("focus gained by Exit");
		}
	}

	public void focusLost(FocusEvent e)
	{
		if(e.getSource()==btn)
		{
			if(btn.getText().equals(""))
			{JOptionPane.showMessageDialog(null,"The field cannot be empty");
			btn.requestFocus();}

		}
		if(e.getSource()==btn1)
		{
			System.out.println("focus lost by Exit");

		}
	}
	public static void main(String a[])
	{
	new To();
	}
}
x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x

5)ItemListener
=-=-=-=-=-=-=-=-
Example 1 using IsSelected Method

import javax.swing.*;
import java.awt.event.*;
import java.awt.*;

class testItemListener extends JFrame implements ItemListener

{
	JCheckBox chk1=new JCheckBox("Music");
	JCheckBox chk2=new JCheckBox("Coins");
	JCheckBox chk3=new JCheckBox("Reading");
	JCheckBox chk4=new JCheckBox("Swiming");
	JCheckBox chk5=new JCheckBox("Stamps");

	testItemListener()
	{
		Container c=getContentPane();

		c.setLayout(new FlowLayout());
		c.add(chk1);
		c.add(chk2);
		c.add(chk3);
		c.add(chk4);
		c.add(chk5);

		chk1.addItemListener(this);
		chk2.addItemListener(this);
		chk3.addItemListener(this);
		chk4.addItemListener(this);
		chk5.addItemListener(this);

		setSize(400,400);
		setVisible(true);
	}//A

	public static void main(String a[])
	{
		new testItemListener();
	}//main

	public void itemStateChanged(ItemEvent Matrix)
	{
		if(chk1.isSelected())
		System.out.println("Music Checked");
		else
		System.out.println("Music Un Checked");

		if(chk2.isSelected())
		System.out.println("Coins Checked");
		else
		System.out.println("Coins Un Checked");

		if(chk3.isSelected())
		System.out.println("Reading Checked");
		else
		System.out.println("Reading Un Checked");

		if(chk4.isSelected())
		System.out.println("Swiming Checked");
		else
		System.out.println("Swiming Un Checked");

		if(chk5.isSelected())
		System.out.println("Stamps Checked");
		else
		System.out.println("Stamps Un Checked");

	}


}
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

Examle 2 using is selectes use getItem() in it*************

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

//Program for Item Listener
class Q extends JFrame implements ItemListener
{
	//Text Field & Area
	JTextField txtName = new JTextField(20);
	JTextArea txtAdd=new JTextArea(3,5);

	// Label
	JLabel lblName=new JLabel("Name    :");
	JLabel lblAdd=new JLabel("Address :");
	JLabel lblhobby=new JLabel("Choose ur Hobby :");

	//Check Box
	JCheckBox chk1= new JCheckBox("Reading Novel");
	JCheckBox chk2= new JCheckBox("Listening Music");
	JCheckBox chk3= new JCheckBox("Swiming");
	JCheckBox chk4= new JCheckBox("Catching Fish");
	JCheckBox chk5= new JCheckBox("Playing Game");
	JCheckBox chk6= new JCheckBox("Witching TV");
	JCheckBox chk7= new JCheckBox("Witching Movie");
	Q()
	{
		Container c= getContentPane();
		c.setLayout(new FlowLayout());
		setSize(400,300);
		c.add(lblName);
		c.add(txtName);
		c.add(lblAdd);
		c.add(txtAdd);
		c.add(lblhobby);
		c.add(chk1);
		c.add(chk2);
		c.add(chk3);
		c.add(chk4);
		c.add(chk5);
		c.add(chk6);
		c.add(chk7);
		//adding ItemListener
		chk1.addItemListener(this);
		chk2.addItemListener(this);
		chk3.addItemListener(this);
		chk4.addItemListener(this);
		chk5.addItemListener(this);
		chk6.addItemListener(this);
		chk7.addItemListener(this);

		setVisible(true);

	}//Contructor
	public static void main (String a[])
	{
		new Q();
	}
	public void itemStateChanged(ItemEvent e)
	{
		if(e.getItem()==chk1)
		{
			if(chk1.isSelected())
				System.out.println("Reading Novel Checked");
			else
		 		System.out.println("Reading Novel Un Checked");
		}
		if(e.getItem()==chk2)
		{
			if(chk2.isSelected())
				System.out.println("Listening Music Checked");
			else
			 	System.out.println("Listening Music Un Checked");
		}
		if(e.getItem()==chk3)
		{
			if(chk3.isSelected())
				System.out.println("Swiming Checked");
			else
		 	 	System.out.println("Swiming Un Checked");
		}
		if(e.getItem()==chk4)
		{
			if(chk4.isSelected())
				System.out.println("Catching Fish Checked");
			else
				System.out.println("Catching Fish Un Checked");
		}
		if(e.getItem()==chk5)
		{
			if(chk5.isSelected())
				System.out.println("Playing Game Checked");
			else
				System.out.println("Playing Game Un Checked");
		}
		if(e.getItem()==chk6)
		{
			if(chk6.isSelected())
				System.out.println("Witching TV Checked");
			else
				System.out.println("Witching TV Un Checked");
		}
		if(e.getItem()==chk7)
		{
			if(chk7.isSelected())
				System.out.println("Witching Movie Checked");
			else
				System.out.println("Witching Movie Un Checked");
		}



	}

}//class

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

Example 3 Function Used for check boxes

import javax.swing.*;
import java.awt.event.*;
import java.awt.*;

class testItemListener extends JFrame implements ItemListener

{
	JLabel lblName=new JLabel("Enter Your Name:");
	JLabel lblAdd=new JLabel("Enter Address:");
	JLabel lblTel=new JLabel("Enter Telephone:");
	JLabel lblEmail=new JLabel("Enter Email Add:");
	JLabel lblHobies=new JLabel("Chose your Hobies:");

	JTextField txtName=new JTextField(25);
	JTextField txtAdd=new JTextField(25);
	JTextField txtTel=new JTextField(25);
	JTextField txtEmail=new JTextField(25);

	JCheckBox chkMusic=new JCheckBox("Music");
	JCheckBox chkCoins=new JCheckBox("Coins");
	JCheckBox chkReading=new JCheckBox("Reading");
	JCheckBox chkSwiming=new JCheckBox("Swiming");
	JCheckBox chkStamps=new JCheckBox("Stamps");

	testItemListener()
	{
		Container c=getContentPane();

		c.setLayout(new FlowLayout());
		c.add(lblName);		c.add(txtName);
		c.add(lblAdd);		c.add(txtAdd);
		c.add(lblTel);		c.add(txtTel);
		c.add(lblEmail);	c.add(txtEmail);

		c.add(lblHobies);

		c.add(chkMusic);
		c.add(chkCoins);
		c.add(chkReading);
		c.add(chkSwiming);
		c.add(chkStamps);

		chkMusic.addItemListener(this);
		chkCoins.addItemListener(this);
		chkReading.addItemListener(this);
		chkSwiming.addItemListener(this);
		chkStamps.addItemListener(this);

		setSize(400,350);
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		setResizable(false);
		setVisible(true);
	}//A

	public static void main(String a[])
	{
		new testItemListener();
	}//main

	//Function for which Checkbox Selected
	public void process(JCheckBox c)
	{
		if(c.isSelected())
			System.out.println(c.getText() + " is Checked");
		else
			System.out.println(c.getText() + " is Unchecked");

	}//End Process Function

	public void itemStateChanged(ItemEvent Matrix)
	{
		if(Matrix.getItem()==chkMusic)
			process(chkMusic);
		else if(Matrix.getItem()==chkCoins)
			process(chkCoins);
		else if(Matrix.getItem()==chkReading)
			process(chkReading);
		else if(Matrix.getItem()==chkSwiming)
			process(chkSwiming);
		else if(Matrix.getItem()==chkStamps)
			process(chkStamps);
	}//itemStateChanged
}
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
